"use strict";
/*
 * Wire
 * Copyright (C) 2018 Wire Swiss GmbH
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see http://www.gnu.org/licenses/.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
const client_1 = require("@wireapp/api-client/src/client");
const LoginSanitizer_1 = require("./LoginSanitizer");
describe('LoginSanitizer', () => {
    describe('"removeNonPrintableCharacters"', () => {
        it('sanitizes login data in-place', () => {
            const loginData = {
                clientType: client_1.ClientType.NONE,
                email: 'me@wire.com\t',
                password: '\r\nsecret',
            };
            LoginSanitizer_1.LoginSanitizer.removeNonPrintableCharacters(loginData);
            expect(loginData.email).toBe('me@wire.com');
            expect(loginData.password).toBe('\r\nsecret');
        });
        it('does not strip non-ASCII', () => {
            const loginData = {
                clientType: client_1.ClientType.NONE,
                email: '😀中文¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿƒΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρςστυφχψωϑϒϖ•…′″‾⁄℘ℑℜ™ℵ←↑→↓↔↵⇐⇑⇒⇓⇔∀∂∃∅∇∈∉∋∏∑−∗√∝∞∠∧∨∩∪∫∴∼≅≈≠≡≤≥⊂⊃⊄⊆⊇⊕⊗⊥⋅⌈⌉⌊⌋⟨〈⟩〉◊♠♣♥♦"&<>ŒœŠšŸˆ˜‌‍‎‏–—‘’‚“”„†‡‰‹›€@wire.com',
                password: ' 😀中文¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿƒΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρςστυφχψωϑϒϖ•…′″‾⁄℘ℑℜ™ℵ←↑→↓↔↵⇐⇑⇒⇓⇔∀∂∃∅∇∈∉∋∏∑−∗√∝∞∠∧∨∩∪∫∴∼≅≈≠≡≤≥⊂⊃⊄⊆⊇⊕⊗⊥⋅⌈⌉⌊⌋⟨〈⟩〉◊♠♣♥♦"&<>ŒœŠšŸˆ˜‌‍‎‏–—‘’‚“”„†‡‰‹›€',
            };
            LoginSanitizer_1.LoginSanitizer.removeNonPrintableCharacters(loginData);
            expect(loginData.email).toBe('😀中文¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿƒΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρςστυφχψωϑϒϖ•…′″‾⁄℘ℑℜ™ℵ←↑→↓↔↵⇐⇑⇒⇓⇔∀∂∃∅∇∈∉∋∏∑−∗√∝∞∠∧∨∩∪∫∴∼≅≈≠≡≤≥⊂⊃⊄⊆⊇⊕⊗⊥⋅⌈⌉⌊⌋⟨〈⟩〉◊♠♣♥♦"&<>ŒœŠšŸˆ˜‌‍‎‏–—‘’‚“”„†‡‰‹›€@wire.com');
            expect(loginData.password).toBe(' 😀中文¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿƒΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρςστυφχψωϑϒϖ•…′″‾⁄℘ℑℜ™ℵ←↑→↓↔↵⇐⇑⇒⇓⇔∀∂∃∅∇∈∉∋∏∑−∗√∝∞∠∧∨∩∪∫∴∼≅≈≠≡≤≥⊂⊃⊄⊆⊇⊕⊗⊥⋅⌈⌉⌊⌋⟨〈⟩〉◊♠♣♥♦"&<>ŒœŠšŸˆ˜‌‍‎‏–—‘’‚“”„†‡‰‹›€');
        });
        it('turns a given password into a string', () => {
            const loginData = {
                clientType: client_1.ClientType.NONE,
                email: 'me@wire.com\t',
                password: 1234567890,
            };
            LoginSanitizer_1.LoginSanitizer.removeNonPrintableCharacters(loginData);
            expect(loginData.password).toEqual(jasmine.any(String));
        });
    });
});
//# sourceMappingURL=LoginSanitizer.test.node.js.map