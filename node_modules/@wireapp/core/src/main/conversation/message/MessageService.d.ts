import { APIClient } from '@wireapp/api-client';
import { ClientMismatch, MessageSendingStatus, OTRRecipients, QualifiedOTRRecipients } from '@wireapp/api-client/src/conversation';
import { CryptographyService } from '../../cryptography';
export declare class MessageService {
    private readonly apiClient;
    private readonly cryptographyService;
    constructor(apiClient: APIClient, cryptographyService: CryptographyService);
    sendOTRMessage(sendingClientId: string, recipients: OTRRecipients<Uint8Array>, conversationId: string | null, plainTextArray: Uint8Array, base64CipherText?: string): Promise<ClientMismatch>;
    private checkFederatedClientsMismatch;
    sendFederatedOTRMessage(sendingClientId: string, conversationId: string, conversationDomain: string, recipients: QualifiedOTRRecipients, plainTextArray: Uint8Array, assetData?: Uint8Array): Promise<MessageSendingStatus>;
    sendOTRProtobufMessage(sendingClientId: string, recipients: OTRRecipients<Uint8Array>, conversationId: string | null, plainTextArray: Uint8Array, assetData?: Uint8Array): Promise<ClientMismatch>;
    private onClientMismatch;
    private onClientProtobufMismatch;
    private onFederatedClientMismatch;
}
