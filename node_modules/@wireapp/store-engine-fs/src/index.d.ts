import { CRUDEngine } from '@wireapp/store-engine';
export interface FileEngineOptions {
    fileExtension: string;
}
export declare class FileEngine implements CRUDEngine {
    private readonly baseDirectory;
    options: FileEngineOptions;
    [index: string]: any;
    private autoIncrementedPrimaryKey;
    storeName: string;
    static path: any;
    static enforcePathRestrictions(givenTrustedRoot: string, givenPath: string): string;
    constructor(baseDirectory?: string, options?: FileEngineOptions);
    isSupported(): Promise<void>;
    init(storeName?: string, options?: {
        fileExtension: string;
    }): Promise<string>;
    purge(): Promise<void>;
    clearTables(): Promise<void>;
    create<EntityType = Object, PrimaryKey = string>(tableName: string, primaryKey: PrimaryKey, entity: EntityType): Promise<PrimaryKey>;
    delete<PrimaryKey = string>(tableName: string, primaryKey: PrimaryKey): Promise<PrimaryKey>;
    deleteAll(tableName: string): Promise<boolean>;
    read<EntityType = Object, PrimaryKey = string>(tableName: string, primaryKey: PrimaryKey): Promise<EntityType>;
    readAll<T>(tableName: string): Promise<T[]>;
    readAllPrimaryKeys(tableName: string): Promise<string[]>;
    update<PrimaryKey = string, ChangesType = Object>(tableName: string, primaryKey: PrimaryKey, changes: ChangesType): Promise<PrimaryKey>;
    updateOrCreate<PrimaryKey = string, ChangesType = Object>(tableName: string, primaryKey: PrimaryKey, changes: ChangesType): Promise<PrimaryKey>;
    private resolvePath;
}
