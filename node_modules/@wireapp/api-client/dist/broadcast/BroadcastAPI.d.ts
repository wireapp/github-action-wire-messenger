import { ClientMismatch, NewOTRMessage } from '../conversation/';
import { HttpClient } from '../http/';
export declare class BroadcastAPI {
    private readonly client;
    constructor(client: HttpClient);
    static readonly URL: {
        BROADCAST: string;
    };
    /**
     * Broadcast an encrypted message to all team members and all contacts (accepts Protobuf).
     * @param clientId The sender's client ID
     * @param messageData The message content
     * @param ignoreMissing Whether to report missing clients or not:
     * `false`: Report about all missing clients
     * `true`: Ignore all missing clients and force sending
     * `undefined`: Default to setting of `report_missing` in `NewOTRMessage`
     * @see https://staging-nginz-https.zinfra.io/swagger-ui/tab.html#!/postOtrBroadcast
     */
    postBroadcastMessage(clientId: string, messageData: NewOTRMessage, ignoreMissing?: boolean): Promise<ClientMismatch>;
}
