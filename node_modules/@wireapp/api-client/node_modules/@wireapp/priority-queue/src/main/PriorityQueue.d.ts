import { Item } from './Item';
import { Priority } from './Priority';
import type { Config } from './Config';
export declare class PriorityQueue {
    private readonly config;
    private isRunning;
    private queue;
    constructor(config?: Partial<Config>);
    add<T>(thunkedPromise: () => T, priority?: Priority, label?: string): Promise<T>;
    enqueue(item: Item): void;
    delete(label: string): void;
    deleteAll(): void;
    get all(): Item[];
    get first(): Item;
    get last(): Item;
    get size(): number;
    private processList;
    private getGrowingDelay;
    toString(): string;
}
