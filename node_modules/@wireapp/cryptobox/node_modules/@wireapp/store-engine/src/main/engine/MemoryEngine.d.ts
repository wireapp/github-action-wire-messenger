import type { CRUDEngine } from './CRUDEngine';
export declare type MemoryStore = Record<string, Record<string, any>>;
export declare class MemoryEngine implements CRUDEngine {
    storeName: string;
    private readonly stores;
    private autoIncrementedPrimaryKey;
    create<EntityType, PrimaryKey = string>(tableName: string, primaryKey: PrimaryKey, entity: EntityType): Promise<PrimaryKey>;
    clearTables(): Promise<void>;
    delete<PrimaryKey = string>(tableName: string, primaryKey: PrimaryKey): Promise<PrimaryKey>;
    deleteAll(tableName: string): Promise<boolean>;
    init(storeName: string): Promise<MemoryStore>;
    initWithObject<ObjectType = Object>(storeName: string, object: ObjectType): Promise<MemoryStore>;
    private assignDb;
    isSupported(): Promise<void>;
    purge(): Promise<void>;
    read<EntityType = Object, PrimaryKey = string>(tableName: string, primaryKey: PrimaryKey): Promise<EntityType>;
    readAll<T>(tableName: string): Promise<T[]>;
    readAllPrimaryKeys(tableName: string): Promise<string[]>;
    update<PrimaryKey = string, ChangesType = Object>(tableName: string, primaryKey: PrimaryKey, changes: ChangesType): Promise<PrimaryKey>;
    updateOrCreate<PrimaryKey = string, ChangesType = Object>(tableName: string, primaryKey: PrimaryKey, changes: ChangesType): Promise<PrimaryKey>;
    private prepareTable;
}
