import * as platform from 'platform';
export declare enum OperatingSystem {
    ANDROID = "OperatingSystem.ANDROID",
    IOS = "OperatingSystem.IOS",
    LINUX = "OperatingSystem.LINUX",
    MAC = "OperatingSystem.MAC",
    WINDOWS = "OperatingSystem.WINDOWS"
}
export interface OS {
    architecture: string | number;
    family: string;
    version: string;
}
export interface BrowserVersion {
    major: number;
    minor: number;
}
export declare class Runtime {
    static getPlatform(): typeof platform;
    static getOSFamily(): OperatingSystem;
    /**
     * NOTE: This converts the browser name to lowercase.
     */
    static getBrowserName(): string;
    static getBrowserVersion(): BrowserVersion;
    /**
     * NOTE: This converts the User-Agent to lowercase.
     */
    static getUserAgent(): string;
    static isWebappSupportedBrowser(): boolean;
    static getOS(): OS;
    static isSupportingWebSockets: () => boolean;
    static isSupportingClipboard: () => boolean;
    static isSupportingIndexedDb: () => boolean;
    static isSupportingLegacyCalling: () => boolean;
    static isSupportingConferenceCalling: () => boolean;
    static isSupportingRTCPeerConnection: () => boolean;
    static isSupportingRTCDataChannel: () => boolean;
    static isSupportingUserMedia: () => boolean;
    static isSupportingDisplayMedia: () => boolean;
    static isSupportingScreensharing: () => boolean;
    static isSupportingPermissions: () => boolean;
    static isSupportingNotifications: () => boolean;
    static isChrome(): boolean;
    static isEdge(): boolean;
    static isFirefox(): boolean;
    static isInternetExplorer(): boolean;
    static isOpera(): boolean;
    static isSafari(): boolean;
    static isDesktopOS(): boolean;
    static isElectron(): boolean;
    static isNode(): boolean;
    static isDesktopApp(): boolean;
    static isFranz(): boolean;
    static isMacOS(): boolean;
    static isWindows(): boolean;
    static isLinux(): boolean;
    static isMobileOS(): boolean;
    static isAndroid(): boolean;
    static isIOS(): boolean;
}
