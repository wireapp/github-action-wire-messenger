export declare class Encoder {
    private buffer;
    private view;
    constructor();
    get_buffer(): ArrayBuffer;
    private _new_buffer_length;
    private _grow_buffer;
    private _ensure;
    private _advance;
    private _write;
    private _write_type_and_len;
    private _u8;
    private _u16;
    private _u32;
    private _u64;
    private _f32;
    private _f64;
    private _bytes;
    u8(value: number): Encoder;
    u16(value: number): Encoder;
    u32(value: number): Encoder;
    u64(value: number): Encoder;
    i8(value: number): Encoder;
    i16(value: number): Encoder;
    i32(value: number): Encoder;
    i64(value: number): Encoder;
    f32(value: number): Encoder;
    f64(value: number): Encoder;
    bool(value: boolean): Encoder;
    bytes(value: ArrayBuffer | Uint8Array): Encoder;
    text(value: string): Encoder;
    null(): Encoder;
    undefined(): Encoder;
    array(len: number): Encoder;
    array_begin(): Encoder;
    array_end(): Encoder;
    object(len: number): Encoder;
    object_begin(): Encoder;
    object_end(): Encoder;
}
