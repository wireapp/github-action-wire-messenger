import { Decoder, Encoder } from '@wireapp/cbor';
import { MacKey } from '../derived/MacKey';
import { CipherMessage } from './CipherMessage';
import { Message } from './Message';
import { PreKeyMessage } from './PreKeyMessage';
export declare class Envelope {
    readonly _message_enc: Uint8Array;
    readonly message: Message;
    readonly version: number;
    mac: Uint8Array;
    constructor(macKey: MacKey, message: Message, version?: number);
    verify(macKey: MacKey): boolean;
    serialise(): ArrayBuffer;
    static deserialise(buf: ArrayBuffer): Envelope;
    static encode(encoder: Encoder, envelope: Envelope): Encoder;
    static decode(decoder: Decoder): Envelope;
    static deserialiseMessage<T extends CipherMessage | PreKeyMessage>(buf: ArrayBuffer): T;
}
