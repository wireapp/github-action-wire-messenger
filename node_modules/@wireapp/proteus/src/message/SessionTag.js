"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SessionTag = void 0;
const sodium = require("libsodium-wrappers-sumo");
const DecodeError_1 = require("../errors/DecodeError");
const RandomUtil_1 = require("../util/RandomUtil");
class SessionTag {
    constructor(tag) {
        this.tag = tag || RandomUtil_1.random_bytes(SessionTag.randomBytesLength);
    }
    toString() {
        return sodium.to_hex(this.tag);
    }
    static encode(encoder, sessionTag) {
        return encoder.bytes(sessionTag.tag);
    }
    static decode(decoder) {
        const length = 16;
        const bytes = new Uint8Array(decoder.bytes());
        if (bytes.byteLength !== length) {
            throw new DecodeError_1.DecodeError.InvalidArrayLen(`Session tag should be 16 bytes, not ${bytes.byteLength} bytes.`, DecodeError_1.DecodeError.CODE.CASE_303);
        }
        return new SessionTag(new Uint8Array(bytes));
    }
}
exports.SessionTag = SessionTag;
SessionTag.randomBytesLength = 16;
//# sourceMappingURL=SessionTag.js.map