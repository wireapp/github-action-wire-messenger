"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MacKey = void 0;
const sodium = require("libsodium-wrappers-sumo");
const DecodeError_1 = require("../errors/DecodeError");
class MacKey {
    constructor(key) {
        this.key = key;
    }
    static sign(macKey, msg) {
        return sodium.crypto_auth_hmacsha256(msg, macKey.key);
    }
    verify(signature, msg) {
        return sodium.crypto_auth_hmacsha256_verify(signature, msg, this.key);
    }
    static encode(encoder, macKey) {
        encoder.object(MacKey.propertiesLength);
        encoder.u8(0);
        return encoder.bytes(macKey.key);
    }
    static decode(decoder) {
        const propertiesLength = decoder.object();
        if (propertiesLength === MacKey.propertiesLength) {
            decoder.u8();
            const keyBytes = new Uint8Array(decoder.bytes());
            return new MacKey(keyBytes);
        }
        throw new DecodeError_1.DecodeError(`Unexpected number of properties: "${propertiesLength}"`);
    }
}
exports.MacKey = MacKey;
MacKey.propertiesLength = 1;
//# sourceMappingURL=MacKey.js.map