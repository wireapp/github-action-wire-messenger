"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IdentityKeyPair = void 0;
const cbor_1 = require("@wireapp/cbor");
const DecodeError_1 = require("../errors/DecodeError");
const IdentityKey_1 = require("./IdentityKey");
const KeyPair_1 = require("./KeyPair");
const SecretKey_1 = require("./SecretKey");
class IdentityKeyPair {
    constructor(publicKey, secretKey, version = 1) {
        const keyPair = new KeyPair_1.KeyPair();
        this.public_key = publicKey || new IdentityKey_1.IdentityKey(keyPair.public_key);
        this.secret_key = secretKey || keyPair.secret_key;
        this.version = version;
    }
    serialise() {
        const encoder = new cbor_1.Encoder();
        IdentityKeyPair.encode(encoder, this);
        return encoder.get_buffer();
    }
    static deserialise(buf) {
        const decoder = new cbor_1.Decoder(buf);
        return IdentityKeyPair.decode(decoder);
    }
    static encode(encoder, identityKeyPair) {
        encoder.object(IdentityKeyPair.propertiesLength);
        encoder.u8(0);
        encoder.u8(identityKeyPair.version);
        encoder.u8(1);
        encoder.object(1);
        encoder.u8(0);
        encoder.bytes(identityKeyPair.secret_key.sec_edward);
        encoder.u8(2);
        encoder.object(1);
        encoder.u8(0);
        encoder.object(1);
        encoder.u8(0);
        encoder.bytes(identityKeyPair.public_key.public_key.pub_edward);
        return encoder;
    }
    static decode(decoder) {
        const propertiesLength = decoder.object();
        if (propertiesLength === IdentityKeyPair.propertiesLength) {
            decoder.u8();
            const version = decoder.u8();
            decoder.u8();
            const secretKey = SecretKey_1.SecretKey.decode(decoder);
            decoder.u8();
            const publicKey = IdentityKey_1.IdentityKey.decode(decoder);
            return new IdentityKeyPair(publicKey, secretKey, version);
        }
        throw new DecodeError_1.DecodeError(`Unexpected number of properties: "${propertiesLength}"`);
    }
}
exports.IdentityKeyPair = IdentityKeyPair;
IdentityKeyPair.propertiesLength = 3;
//# sourceMappingURL=IdentityKeyPair.js.map