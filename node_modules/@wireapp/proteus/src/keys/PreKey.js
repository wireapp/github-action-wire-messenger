"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PreKey = void 0;
const cbor_1 = require("@wireapp/cbor");
const DecodeError_1 = require("../errors/DecodeError");
const KeyPair_1 = require("./KeyPair");
class PreKey {
    constructor(keyId = -1, keyPair = new KeyPair_1.KeyPair(), version = 1) {
        this.key_id = keyId;
        this.key_pair = keyPair;
        this.version = version;
    }
    static last_resort() {
        return new PreKey(PreKey.MAX_PREKEY_ID);
    }
    static generate_prekeys(start, size) {
        if (size === 0) {
            return [];
        }
        return Array.from({ length: size }).map((_, index) => new PreKey((start + index) % PreKey.MAX_PREKEY_ID));
    }
    serialise() {
        const encoder = new cbor_1.Encoder();
        PreKey.encode(encoder, this);
        return encoder.get_buffer();
    }
    static deserialise(buf) {
        return PreKey.decode(new cbor_1.Decoder(buf));
    }
    static encode(encoder, preKey) {
        encoder.object(PreKey.propertiesLength);
        encoder.u8(0);
        encoder.u8(preKey.version);
        encoder.u8(1);
        encoder.u16(preKey.key_id);
        encoder.u8(2);
        return KeyPair_1.KeyPair.encode(encoder, preKey.key_pair);
    }
    static decode(decoder) {
        const propertiesLength = decoder.object();
        if (propertiesLength === PreKey.propertiesLength) {
            decoder.u8();
            const version = decoder.u8();
            decoder.u8();
            const keyId = decoder.u16();
            decoder.u8();
            const keyPair = KeyPair_1.KeyPair.decode(decoder);
            return new PreKey(keyId, keyPair, version);
        }
        throw new DecodeError_1.DecodeError(`Unexpected number of properties: "${propertiesLength}"`);
    }
}
exports.PreKey = PreKey;
PreKey.MAX_PREKEY_ID = 0xffff;
PreKey.propertiesLength = 3;
//# sourceMappingURL=PreKey.js.map