"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageKeys = void 0;
const MacKey_1 = require("../derived/MacKey");
const CipherKey_1 = require("../derived/CipherKey");
const DecodeError_1 = require("../errors/DecodeError");
class MessageKeys {
    constructor(cipherKey, macKey, counter) {
        this.cipher_key = cipherKey;
        this.mac_key = macKey;
        this.counter = counter;
    }
    _counter_as_nonce() {
        const nonce = new ArrayBuffer(8);
        new DataView(nonce).setUint32(0, this.counter);
        return new Uint8Array(nonce);
    }
    encrypt(plaintext) {
        return this.cipher_key.encrypt(plaintext, this._counter_as_nonce());
    }
    decrypt(ciphertext) {
        return this.cipher_key.decrypt(ciphertext, this._counter_as_nonce());
    }
    static encode(encoder, messageKeys) {
        encoder.object(MessageKeys.propertiesLength);
        encoder.u8(0);
        CipherKey_1.CipherKey.encode(encoder, messageKeys.cipher_key);
        encoder.u8(1);
        MacKey_1.MacKey.encode(encoder, messageKeys.mac_key);
        encoder.u8(2);
        return encoder.u32(messageKeys.counter);
    }
    static decode(decoder) {
        const propertiesLength = decoder.object();
        if (propertiesLength === MessageKeys.propertiesLength) {
            decoder.u8();
            const cipherKey = CipherKey_1.CipherKey.decode(decoder);
            decoder.u8();
            const macKey = MacKey_1.MacKey.decode(decoder);
            decoder.u8();
            const counter = decoder.u32();
            return new MessageKeys(cipherKey, macKey, counter);
        }
        throw new DecodeError_1.DecodeError(`Unexpected number of properties: "${propertiesLength}"`);
    }
}
exports.MessageKeys = MessageKeys;
MessageKeys.propertiesLength = 3;
//# sourceMappingURL=MessageKeys.js.map