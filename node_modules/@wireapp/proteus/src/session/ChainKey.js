"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChainKey = void 0;
const DerivedSecrets_1 = require("../derived/DerivedSecrets");
const MacKey_1 = require("../derived/MacKey");
const DecodeError_1 = require("../errors/DecodeError");
const MessageKeys_1 = require("./MessageKeys");
class ChainKey {
    constructor(key, index = -1) {
        this.idx = index;
        this.key = key;
    }
    static from_mac_key(key, counter) {
        return new ChainKey(key, counter);
    }
    static next(chainKey) {
        const key = new MacKey_1.MacKey(MacKey_1.MacKey.sign(chainKey.key, '1'));
        const index = chainKey.idx + 1;
        return new ChainKey(key, index);
    }
    static message_keys(chainKey) {
        const base = MacKey_1.MacKey.sign(chainKey.key, '0');
        const derivedSecrets = DerivedSecrets_1.DerivedSecrets.kdf_without_salt(base, 'hash_ratchet');
        return new MessageKeys_1.MessageKeys(derivedSecrets.cipher_key, derivedSecrets.mac_key, chainKey.idx);
    }
    static encode(encoder, chainKey) {
        encoder.object(ChainKey.propertiesLength);
        encoder.u8(0);
        MacKey_1.MacKey.encode(encoder, chainKey.key);
        encoder.u8(1);
        return encoder.u32(chainKey.idx);
    }
    static decode(decoder) {
        const propertiesLength = decoder.object();
        if (propertiesLength === ChainKey.propertiesLength) {
            decoder.u8();
            const key = MacKey_1.MacKey.decode(decoder);
            decoder.u8();
            const index = decoder.u32();
            return new ChainKey(key, index);
        }
        throw new DecodeError_1.DecodeError(`Unexpected number of properties: "${propertiesLength}"`);
    }
}
exports.ChainKey = ChainKey;
ChainKey.propertiesLength = 2;
//# sourceMappingURL=ChainKey.js.map