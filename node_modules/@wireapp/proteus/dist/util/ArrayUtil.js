"use strict";
/*
 * Wire
 * Copyright (C) 2018 Wire Swiss GmbH
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see http://www.gnu.org/licenses/.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.concatenate_array_buffers = exports.assert_is_not_zeros = void 0;
const ProteusError_1 = require("../errors/ProteusError");
function assert_is_not_zeros(array) {
    let onlyZeros = true;
    for (const value of array) {
        if (value > 0) {
            onlyZeros = false;
            break;
        }
    }
    if (onlyZeros === true) {
        throw new ProteusError_1.ProteusError('Array consists only of zeros', ProteusError_1.ProteusError.CODE.CASE_100);
    }
}
exports.assert_is_not_zeros = assert_is_not_zeros;
/** Concatenates array buffers (usually 8-bit unsigned). */
function concatenate_array_buffers(buffers) {
    return buffers.reduce((accumulator, bytes) => {
        const buffer = new Uint8Array(accumulator.byteLength + bytes.byteLength);
        buffer.set(accumulator, 0);
        buffer.set(bytes, accumulator.byteLength);
        return buffer;
    });
}
exports.concatenate_array_buffers = concatenate_array_buffers;
//# sourceMappingURL=ArrayUtil.js.map