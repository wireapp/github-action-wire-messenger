"use strict";
/*
 * Wire
 * Copyright (C) 2018 Wire Swiss GmbH
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see http://www.gnu.org/licenses/.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IdentityKey = void 0;
const PublicKey_1 = require("./PublicKey");
const errors_1 = require("../errors");
/**
 * Construct a long-term identity key pair.
 *
 * Every client has a long-term identity key pair.
 * Long-term identity keys are used to initialise "sessions" with other clients (triple DH).
 */
let IdentityKey = /** @class */ (() => {
    class IdentityKey {
        constructor(publicKey) {
            this.public_key = publicKey;
        }
        fingerprint() {
            return this.public_key.fingerprint();
        }
        encode(encoder) {
            encoder.object(IdentityKey.propertiesLength);
            encoder.u8(0);
            return this.public_key.encode(encoder);
        }
        static decode(decoder) {
            const propertiesLength = decoder.object();
            if (propertiesLength === IdentityKey.propertiesLength) {
                decoder.u8();
                const publicKey = PublicKey_1.PublicKey.decode(decoder);
                return new IdentityKey(publicKey);
            }
            throw new errors_1.DecodeError(`Unexpected number of properties: "${propertiesLength}"`);
        }
    }
    IdentityKey.propertiesLength = 1;
    return IdentityKey;
})();
exports.IdentityKey = IdentityKey;
//# sourceMappingURL=IdentityKey.js.map