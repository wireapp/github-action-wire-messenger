import * as CBOR from '@wireapp/cbor';
import { KeyPair } from './KeyPair';
/**
 * Pre-generated (and regularly refreshed) pre-keys.
 * A Pre-Shared Key contains the public long-term identity and ephemeral handshake keys for the initial triple DH.
 */
export declare class PreKey {
    static readonly MAX_PREKEY_ID = 65535;
    readonly key_id: number;
    readonly key_pair: KeyPair;
    readonly version: number;
    private static readonly propertiesLength;
    constructor(keyPair: KeyPair, keyId?: number, version?: number);
    static new(preKeyId: number): Promise<PreKey>;
    static validate_pre_key_id(preKeyId: number): void;
    static last_resort(): Promise<PreKey>;
    static generate_prekeys(start: number, size: number): Promise<PreKey[]>;
    serialise(): ArrayBuffer;
    static deserialise(buf: ArrayBuffer): PreKey;
    encode(encoder: CBOR.Encoder): CBOR.Encoder;
    static decode(decoder: CBOR.Decoder): PreKey;
}
