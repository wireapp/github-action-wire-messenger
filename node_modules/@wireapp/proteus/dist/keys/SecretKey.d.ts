import * as CBOR from '@wireapp/cbor';
import { PublicKey } from './PublicKey';
export declare class SecretKey {
    readonly sec_curve: Uint8Array;
    readonly sec_edward: Uint8Array;
    private static readonly propertiesLength;
    constructor(secEdward: Uint8Array, secCurve: Uint8Array);
    /**
     * This function can be used to compute a message signature.
     * @param message Message to be signed
     * @returns A message signature
     */
    sign(message: Uint8Array | string): Uint8Array;
    /**
     * This function can be used to compute a shared secret given a user's secret key and another
     * user's public key.
     * @param publicKey Another user's public key
     * @returns Array buffer view of the computed shared secret
     */
    shared_secret(publicKey: PublicKey): Uint8Array;
    encode(encoder: CBOR.Encoder): CBOR.Encoder;
    static decode(decoder: CBOR.Decoder): SecretKey;
}
