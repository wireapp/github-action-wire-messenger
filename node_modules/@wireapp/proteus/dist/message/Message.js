"use strict";
/*
 * Wire
 * Copyright (C) 2018 Wire Swiss GmbH
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see http://www.gnu.org/licenses/.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Message = void 0;
const CBOR = require("@wireapp/cbor");
const DecodeError_1 = require("../errors/DecodeError");
class Message {
    constructor() { }
    serialise() {
        const encoder = new CBOR.Encoder();
        if (this instanceof CipherMessage_1.CipherMessage) {
            encoder.u8(1);
        }
        else if (this instanceof PreKeyMessage_1.PreKeyMessage) {
            encoder.u8(2);
        }
        else {
            throw new TypeError('Unexpected message type');
        }
        this.encode(encoder);
        return encoder.get_buffer();
    }
    static deserialise(buf) {
        const decoder = new CBOR.Decoder(buf);
        switch (decoder.u8()) {
            case 1:
                return CipherMessage_1.CipherMessage.decode(decoder);
            case 2:
                return PreKeyMessage_1.PreKeyMessage.decode(decoder);
            default:
                throw new DecodeError_1.DecodeError.InvalidType('Unrecognised message type', DecodeError_1.DecodeError.CODE.CASE_302);
        }
    }
}
exports.Message = Message;
// these import statements have to come after the Message definition because otherwise
// it creates a circular dependency with the message subtypes
const CipherMessage_1 = require("./CipherMessage");
const PreKeyMessage_1 = require("./PreKeyMessage");
//# sourceMappingURL=Message.js.map