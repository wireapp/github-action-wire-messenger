import * as CBOR from '@wireapp/cbor';
import { PublicKey } from '../keys/PublicKey';
import { CipherMessage } from '../message/CipherMessage';
import { Envelope } from '../message/Envelope';
import { ChainKey } from './ChainKey';
import { MessageKeys } from './MessageKeys';
export declare class RecvChain {
    chain_key: ChainKey;
    readonly message_keys: MessageKeys[];
    readonly ratchet_key: PublicKey;
    static readonly MAX_COUNTER_GAP = 1000;
    private static readonly propertiesLength;
    constructor(chainKey: ChainKey, publicKey: PublicKey, messageKeys?: MessageKeys[]);
    try_message_keys(envelope: Envelope, msg: CipherMessage): Uint8Array;
    stage_message_keys(msg: CipherMessage): [ChainKey, MessageKeys, MessageKeys[]];
    commit_message_keys(keys: MessageKeys[]): void;
    encode(encoder: CBOR.Encoder): CBOR.Encoder[];
    static decode(decoder: CBOR.Decoder): RecvChain;
}
